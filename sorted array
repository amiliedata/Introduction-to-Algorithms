#Selection Sort

def selection_sort(A, i = None):
    if i is None: # i가 주어지지 않으면, 
        i = len(A) - 1 # list A의 마지막 인자로 설정, 처음 함수 호출 시에는 i가 마지막 인덱스로 초기화되고, 그 후 재귀 호출들에서 i가 줄어들며 정렬 작업을 수행
    if i <= 0: # 종료 조건을 명시해주지 않아서 i가 언제 0 이하로 가게 되는지를 제어하지 못하고 있습니다. 그 결과, i가 음수가 되거나 None이 되어 리스트 인덱스로 사용될 수 없기 때문에 TypeError가 발생
        return A
    if i > 0 :
        j = prefix_max(A, i) #prefix_max 함수를 호출하여 현재 부분 배열에서 가장 큰 원소의 인덱스를 찾습니다. 그리고 이 가장 큰 원소를 현재 부분 배열의 맨 뒤 원소와 교환
        A[i], A[j] = A[j], A[i]
        selection_sort(A, i-1)
    return A

def prefix_max(A, i): # 재귀적으로 배열에서 가장 큰 원소의 인덱스를 찾는 역할을 합니다. 재귀 호출을 통해 현재 원소와 이전 원소를 비교하며 더 큰 원소의 인덱스를 반환
    if i <= 0: 
        return 0
    if i > 0:
        j = prefix_max(A, i-1)
        if A[i] < A[j]:
            return j
        return i
    
A = [8,2,4,9,3]
print(selection_sort(A))
